type MetroAndBusStop implements Infrastructure{
	locatedIn : GeographicalCoordinate!
	nearByInfrastructure : [Infrastructure]
	InfrastructureType: String!
	stopName : String!
	stopPhone : Int
	stopAddress : String
}

type Suburb {
	belongsTo : District!
	providesStop : [MetroAndBusStop]
	suburbName : String!
}

type GeographicalCoordinate {
	latitude : Float!
	longitude : Float!
}

type BicingStation implements Infrastructure{
	locatedIn : GeographicalCoordinate!
	nearByInfrastructure : [Infrastructure]
	InfrastructureType: String!
	stationBikesNumber : Int!
	nearByStation : [BicingStation]
	stationStreetNumber : Int!
	stationType : String!
	stationStatus : String!
	stationSlotsNumber : Int!
	stationID : ID!
	stationAltitude : Float!
	stationStreetName : String!
}

type District {
	districtName : String!
	districtNumber : Int!
}

interface Infrastructure {
	InfrastructureType: String!
	locatedIn : GeographicalCoordinate!
	nearByInfrastructure : [Infrastructure]
}

type Query {
	allMetroAndBusStops: [MetroAndBusStop]
	getMetroAndBusStop(id: String!): MetroAndBusStop
	allSuburbs: [Suburb]
	getSuburb(id: String!): Suburb
	allGeographicalCoordinates: [GeographicalCoordinate]
	getGeographicalCoordinate(id: String!): GeographicalCoordinate
	allBicingStations: [BicingStation]
	getBicingStation(id: String!): BicingStation
	allDistricts: [District]
	getDistrict(id: String!): District
}
schema {
	query: Query
}

 